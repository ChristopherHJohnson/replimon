apt-get install openjdk-7-jre
apt-get install elasticsearch
sudo update-rc.d elasticsearch defaults 95 10
apt-get install redis-server
apt-get install apache2 apache2.2-common apache2-mpm-prefork apache2-utils libexpat1
a2enmod proxy_http


EDIT /etc/redis/redis.conf
# By default Redis does not run as a daemon. Use 'yes' if you need it.
# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.
daemonize yes
# The working directory.
#
# The DB will be written inside this directory, with the filename specified
# above using the 'dbfilename' configuration directive.
#
# Also the Append Only File will be created inside this directory.
#
# Note that you must specify a directory here, not a file name.
dir /var/home/redis

EDIT Rsyslog.conf
#################
#### MODULES ####
#################


$ModLoad imuxsock # provides support for local system logging
$ModLoad imklog   # provides kernel logging support (previously done by rklogd)
#$ModLoad immark  # provides --MARK-- message capability

# provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

$ModLoad imfile   # Load the imfile input module
$ModLoad imklog   # for reading kernel log messages
$ModLoad imuxsock # for reading local syslog messages

# Watch /var/log/apache2/access.log
$InputFileName /var/log/apache2/access_log
$InputFileTag apache-access:
$InputFileStateFile state-apache-access
$InputRunFileMonitor

# Watch /var/log/apache2/error_log
$InputFileName /var/log/apache2/error_log
$InputFileTag apache-error:
$InputFileStateFile state-apache-error
$InputRunFileMonitor

# Watch /var/log/mysql/mysql.log
$InputFileName /var/log/mysql.log
$InputFileTag mysql:
$InputFileStateFile state-mysql
$InputRunFileMonitor

$InputFilePollInterval 10

#
# Set the default permissions for all log files.
#
$FileOwner syslog
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
$PrivDropToUser syslog
$PrivDropToGroup adm
#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf
*.* @@localhost:5544


CONFIGURE LOGSTASH
useradd -r logstash
mkdir /etc/logstash
mkdir /etc/logstash/patterns
mkdir /usr/local/logstash
mkdir /var/home/logstash
chown logstash /var/home/logstash
git clone https://github.com/ChristopherHJohnson/replimon.git /tmp/replimon
cp /tmp/replimon/logstash*.jar /usr/local/logstash/logstash.jar

#BEGIN "/etc/logstash/logstash.conf"
input {
  syslog {
    type => syslog
    port => 5544
  }
}

filter {
  grok {
    patterns_dir => "/etc/logstash/patterns"
    overwrite => "message"
      match => {
        "message" => "^(?:<%{POSINT:syslog_pri}>)?%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:logsource} ?\[%{DATESTAMP_ISO:isodatestamp}%{SPACE}%{TIMESTAMP_ISO:isotimestamp},%{NUMBER}: %{SYSLOGPROG}\] ?%{GREEDYDATA:messag$
          }
    }
}

output {
stdout { codec => rubydebug }
  redis { host => "127.0.0.1" data_type => "list" key => "logstash" }
}

#BEGIN "/etc/logstash/patterns/time"
DATESTAMP_ISO %{YEAR}-%{MONTHNUM}-%{MONTHDAY}
TIMESTAMP_ISO %{HOUR}:?%{MINUTE}(?::?%{SECOND})

#BEGIN "/etc/init/logstash-agent.conf"
# logstash - agent instance
#

description     "logstash agent instance"

start on virtual-filesystems
stop on runlevel [06]

# Respawn it if the process exits
respawn
respawn limit 5 30
limit nofile 65550 65550
expect fork

# You need to chdir somewhere writable because logstash needs to unpack a few
# temporary files on startup.
chdir /var/home/logstash

script

  # This runs logstash agent as the 'logstash' user
  su -s /bin/sh -c 'exec "$0" "$@"' logstash -- /usr/bin/java -jar /usr/local/logstash/logstash.jar agent -f /etc/logstash/logstash.conf --log /var/log/logstash.log &
  emit logstash-agent-running
end script

#BEGIN "/var/home/logstash/indexer.conf"
input {
  redis {
    host => "127.0.0.1"
    # these settings should match the output of the agent
    data_type => "list"
    key => "logstash"

    # We use the 'json' codec here because we expect to read
    # json events from redis.
    codec => json
  }
}

output {
  stdout { debug => true debug_format => "json"}

  elasticsearch_http {
    host => "127.0.0.1"
  }
}
cp /tmp/replimon/logstash*.jar /var/home/logstash 

#SETUP APACHE
cp /tmp/replimon/apache/kibana /etc/apache2/sites-available
a2dissite default
a2ensite kibana
htpasswd /var/www/.htpasswd kibanauser

#RUN APP
service elasticsearch start
service redis-server start
start logstash-agent
service apache2 reload
cd /var/home/logstash
java -jar logstash-1.3.3-flatjar.jar agent -f indexer.conf
